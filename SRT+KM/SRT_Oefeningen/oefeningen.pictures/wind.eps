%!PS-Adobe-2.0 EPSF-2.0
%%Title: wind.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta2
%%CreationDate: Mon Sep 13 14:15:15 1999
%%For: q33@beppe (Els de Wolf,H224,5123,)
%%Orientation: Portrait
%%BoundingBox: 0 0 759 421
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%Magnification: 1.00
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-36.0 509.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 8515 m 0 0 l 13284 0 l 13284 8515 l cp clip
 0.06000 0.06000 sc
/Times-Roman ff 540.00 scf sf
7800 4950 m
gs 1 -1 sc (c) col0 sh gr
/Times-Roman ff 540.00 scf sf
8850 5175 m
gs 1 -1 sc (c) col0 sh gr
% Polyline
7.500 slw
gs  clippath
8649 4380 m 8529 4350 l 8649 4320 l 8460 4320 l 8460 4380 l cp
clip
n 8475 4350 m 9075 4350 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 565.00 290.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 8649 4380 m 8529 4350 l 8649 4320 l 8649 4350 l 8649 4380 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
8954 4478 m 9045 4394 l 9003 4511 l 9108 4354 l 9058 4321 l cp
clip
n 8475 5250 m 9075 4350 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 565.00 290.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 8954 4478 m 9045 4394 l 9003 4511 l 8978 4495 l 8954 4478 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
8445 4524 m 8475 4404 l 8505 4524 l 8505 4335 l 8445 4335 l cp
clip
n 8475 5250 m 8475 4350 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 565.00 290.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 8445 4524 m 8475 4404 l 8505 4524 l 8475 4524 l 8445 4524 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 540.00 scf sf
8625 4275 m
gs 1 -1 sc (v) col0 sh gr
/Times-Roman ff 540.00 scf sf
11400 5700 m
gs 1 -1 sc (c) col0 sh gr
/Times-Roman ff 540.00 scf sf
10200 6225 m
gs 1 -1 sc (c) col0 sh gr
% Polyline
7.500 slw
gs  clippath
11124 6555 m 11004 6525 l 11124 6495 l 10935 6495 l 10935 6555 l cp
clip
n 11550 6525 m 10950 6525 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 730.00 435.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 11124 6555 m 11004 6525 l 11124 6495 l 11124 6525 l 11124 6555 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
11553 6364 m 11595 6480 l 11504 6397 l 11608 6554 l 11658 6521 l cp
clip
n 11025 5625 m 11625 6525 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 735.00 375.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 11553 6364 m 11595 6480 l 11504 6397 l 11528 6380 l 11553 6364 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
11055 6351 m 11025 6471 l 10995 6351 l 10995 6540 l 11055 6540 l cp
clip
n 11025 5625 m 11025 6525 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 735.00 375.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 11055 6351 m 11025 6471 l 10995 6351 l 11025 6351 l 11055 6351 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 540.00 scf sf
11175 6900 m
gs 1 -1 sc (v) col0 sh gr
% Polyline
7.500 slw
n 7575 1500 m 7575 7500 l gs col0 s gr 
% Polyline
n 7275 7200 m 12075 7200 l gs col0 s gr 
% Polyline
0.000 slw
n 7575 2400 m 12000 2400 l 12000 3000 l 7575 3000 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 505.00 160.00] PATmp PATsp ef gr PATusp 
% Polyline
7.500 slw
n 7575 3000 m 12075 3000 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 505.00 200.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7575 2100 m 7575 3375 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 505.00 140.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
1674 3030 m 1554 3000 l 1674 2970 l 1485 2970 l 1485 3030 l cp
clip
n 1500 3000 m 3600 3000 l 3525 3000 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 200.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 1674 3030 m 1554 3000 l 1674 2970 l 1674 3000 l 1674 3030 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
2226 5970 m 2346 6000 l 2226 6030 l 2415 6030 l 2415 5970 l cp
clip
n 1500 6000 m 2400 6000 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 400.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 2226 5970 m 2346 6000 l 2226 6030 l 2226 6000 l 2226 5970 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
n 1200 1500 m 1200 7500 l gs col0 s gr 
% Polyline
n 900 7200 m 5700 7200 l gs col0 s gr 
% Polyline
0.000 slw
n 5550 2025 m 5550 7200 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 370.00 135.00] PATmp PATsp ef gr PATusp 
% Polyline
n 5625 2100 m 6225 2100 l 6225 7200 l 5625 7200 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 375.00 140.00] PATmp PATsp ef gr PATusp 
% Polyline
7.500 slw
n 5550 7125 m 5550 1950 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 370.00 130.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
4074 4530 m 3954 4500 l 4074 4470 l 3885 4470 l 3885 4530 l cp
clip
n 4500 4500 m 3900 4500 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 260.00 300.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 4074 4530 m 3954 4500 l 4074 4470 l 4074 4500 l 4074 4530 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
12024 4530 m 11904 4500 l 12024 4470 l 11835 4470 l 11835 4530 l cp
clip
n 12450 4500 m 11850 4500 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 790.00 300.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
15.000 slw
n 12024 4530 m 11904 4500 l 12024 4470 l 12024 4500 l 12024 4530 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 540.00 scf sf
1875 6450 m
gs 1 -1 sc (c-v) col0 sh gr
/Times-Roman ff 540.00 scf sf
2175 3450 m
gs 1 -1 sc (c+v) col0 sh gr
/Times-Roman ff 540.00 scf sf
5850 7650 m
gs 1 -1 sc (x') col0 sh gr
/Times-Roman ff 540.00 scf sf
5250 1875 m
gs 1 -1 sc (muur) col0 sh gr
/Times-Roman ff 540.00 scf sf
12075 2775 m
gs 1 -1 sc (muur) col0 sh gr
/Times-Roman ff 540.00 scf sf
3675 4275 m
gs 1 -1 sc (wind) col0 sh gr
/Times-Roman ff 540.00 scf sf
4050 5025 m
gs 1 -1 sc (v) col0 sh gr
/Times-Roman ff 540.00 scf sf
11700 4275 m
gs 1 -1 sc (wind) col0 sh gr
/Times-Roman ff 540.00 scf sf
600 7725 m
gs 1 -1 sc (O') col0 sh gr
/Times-Roman ff 540.00 scf sf
6975 7725 m
gs 1 -1 sc (O') col0 sh gr
/Times-Roman ff 540.00 scf sf
11775 7650 m
gs 1 -1 sc (x') col0 sh gr
/Times-Roman ff 540.00 scf sf
675 1875 m
gs 1 -1 sc (y') col0 sh gr
/Times-Roman ff 540.00 scf sf
7050 1875 m
gs 1 -1 sc (y') col0 sh gr
/Times-Roman ff 540.00 scf sf
12150 4950 m
gs 1 -1 sc (v) col0 sh gr
/Times-Roman ff 360.00 scf sf
8025 5025 m
gs 1 -1 sc (g) col0 sh gr
/Times-Roman ff 300.00 scf sf
8250 5025 m
gs 1 -1 sc (y) col0 sh gr
/Times-Roman ff 360.00 scf sf
9000 5325 m
gs 1 -1 sc (g) col0 sh gr
/Times-Roman ff 360.00 scf sf
11550 5850 m
gs 1 -1 sc (g) col0 sh gr
/Times-Roman ff 360.00 scf sf
10425 6300 m
gs 1 -1 sc (g) col0 sh gr
/Times-Roman ff 300.00 scf sf
10650 6300 m
gs 1 -1 sc (y) col0 sh gr
% Polyline
7.500 slw
gs  clippath
5403 7770 m 5523 7800 l 5403 7830 l 5565 7830 l 5565 7770 l cp
1347 7830 m 1227 7800 l 1347 7770 l 1185 7770 l 1185 7830 l cp
clip
n 1200 7800 m 5550 7800 l gs col0 s gr gr

% arrowhead
n 1347 7830 m 1227 7800 l 1347 7770 l  col0 s
% arrowhead
n 5403 7770 m 5523 7800 l 5403 7830 l  col0 s
% Polyline
gs  clippath
7305 7053 m 7275 7173 l 7245 7053 l 7245 7215 l 7305 7215 l cp
7245 3147 m 7275 3027 l 7305 3147 l 7305 2985 l 7245 2985 l cp
clip
n 7275 3000 m 7275 7200 l gs col0 s gr gr

% arrowhead
n 7245 3147 m 7275 3027 l 7305 3147 l  col0 s
% arrowhead
n 7305 7053 m 7275 7173 l 7245 7053 l  col0 s
/Times-Roman ff 360.00 scf sf
2325 3675 m
gs 1 -1 sc (g) col0 sh gr
/Times-Roman ff 360.00 scf sf
2100 6600 m
gs 1 -1 sc (g) col0 sh gr
/Times-Roman ff 540.00 scf sf
3075 8400 m
gs 1 -1 sc (l) col0 sh gr
/Times-Roman ff 540.00 scf sf
6975 5175 m
gs 1 -1 sc (l) col0 sh gr
$F2psEnd
rs
end
